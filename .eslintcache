[{"C:\\Users\\tusendra\\Desktop\\JS\\REACT easwar\\reactTest\\src\\index.js":"1","C:\\Users\\tusendra\\Desktop\\JS\\REACT easwar\\reactTest\\src\\components\\Directory.js":"2","C:\\Users\\tusendra\\Desktop\\JS\\REACT easwar\\reactTest\\src\\containers\\SidebarLayoutDemo.js":"3","C:\\Users\\tusendra\\Desktop\\JS\\REACT easwar\\reactTest\\src\\components\\SidebarLayout.js":"4"},{"size":517,"mtime":1610796561130,"results":"5","hashOfConfig":"6"},{"size":2174,"mtime":1610824354334,"results":"7","hashOfConfig":"6"},{"size":2995,"mtime":1610830256665,"results":"8","hashOfConfig":"6"},{"size":4556,"mtime":1610824311650,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1do7h7q",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tusendra\\Desktop\\JS\\REACT easwar\\reactTest\\src\\index.js",[],"C:\\Users\\tusendra\\Desktop\\JS\\REACT easwar\\reactTest\\src\\components\\Directory.js",["19","20"],"import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport cx from 'classnames'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  wrapper: {\r\n    listStyleType: 'none',\r\n    paddingLeft: '16px',\r\n  },\r\n  icon: {\r\n    width: 16,\r\n    display: 'inline-block',\r\n    textAlign: 'center',\r\n  },\r\n  file: {\r\n    paddingLeft: '16px',\r\n  },\r\n}))\r\n\r\n\r\n\r\nconst FileSystem = ({ directory, toggleExpand, onFileClick }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <ul className={classes.wrapper}>\r\n      {directory.map(d => (<div key={d.path + '/' + d.name}>\r\n        <li onClick={() => d.type === \"file\" ? onFileClick(d) : toggleExpand(d)}>\r\n          {d.type === 'folder' && (d.isOpen ? (\r\n            <span className={classes.icon}>+</span>\r\n          ) : (\r\n              <span className={classes.icon}>-</span>\r\n            )\r\n          )}\r\n          <span className={cx({ [classes.file]: d.type === 'file' })}>\r\n            {d.name}\r\n          </span>\r\n        </li>\r\n        {d.subDirectory && (d.isOpen && <FileSystem directory={d.subDirectory} toggleExpand={toggleExpand} onFileClick={onFileClick}/>)}\r\n      </div>))}\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\nfunction Directory({setDirectory, directory, onFileClick }) {\r\n  \r\n\r\n  \r\n\r\n\r\n \r\n\r\n\r\n  const matchAndToggle = (dir, partialPath, d) => dir.map(i => {\r\n    if (i.name === partialPath[0]){\r\n      if (partialPath.length === 1){\r\n        i.isOpen =!d.isOpen\r\n      } else {\r\n        matchAndToggle(i.subDirectory,partialPath.splice(1),d)\r\n      }\r\n    }\r\n    return i\r\n  })\r\n  \r\n  const toggleExpand = (d) => {\r\n    const breadCrumbs = [...d.path.split('/'), d.name].splice(1)\r\n    const newDirectory = matchAndToggle(directory,breadCrumbs,d)\r\n    setDirectory(newDirectory)\r\n  }\r\n\r\n  const addDirectory = () => { debugger }\r\n  const deleteDirectory = () => { debugger }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={addDirectory}>Add</button>\r\n        <button onClick={deleteDirectory}>Del</button>\r\n      </div>\r\n      <FileSystem directory={directory} toggleExpand={toggleExpand} onFileClick={onFileClick}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Directory","C:\\Users\\tusendra\\Desktop\\JS\\REACT easwar\\reactTest\\src\\containers\\SidebarLayoutDemo.js",["21"],"C:\\Users\\tusendra\\Desktop\\JS\\REACT easwar\\reactTest\\src\\components\\SidebarLayout.js",[],{"ruleId":"22","severity":1,"message":"23","line":1,"column":17,"nodeType":"24","messageId":"25","endLine":1,"endColumn":26},{"ruleId":"22","severity":1,"message":"26","line":1,"column":28,"nodeType":"24","messageId":"25","endLine":1,"endColumn":36},{"ruleId":"27","severity":1,"message":"28","line":24,"column":18,"nodeType":"29","messageId":"30","endLine":24,"endColumn":20},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]